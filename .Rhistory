https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal() +
facet_wrap(~type, ncol = 2)
c_a_sharea_fac
ggsave("c_a_sharea_fac.png")
c_a_area_fac
#prep for faceted graph
c_a_wrap3 <- comp_alleg_join %>%
select(type != "Untruthful Statement")
View(comp_alleg_join)
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
ccrb_comp_raw <- read.csv("Civilian_Complaint_Review_Board__Complaints_Against_Police_Officers_20240623.csv")
ccrb_comp_cleanv1 <- ccrb_comp_raw %>%
mutate(inc_date = Incident.Date,
rec_date = CCRB.Received.Date,
close_date = Close.Date,
boro = Borough.Of.Incident.Occurrence,
precinct = Precinct.Of.Incident.Occurrence,
disp = CCRB.Complaint.Disposition,
comp_id = Complaint.Id) %>%
select(comp_id, inc_date, rec_date, close_date, boro, precinct, disp)
#Mostly renamings here; keeping comp_id and precinct/boro identifiers so
#I can join them to other sets later
#date-timing the date complaints get received - incidents could be far in the past
#and investigations can sometimes take years so this is a good approximator
ccrb_comp_cleanv2 <- ccrb_comp_cleanv1 %>%
mutate(rec_dt = mdy_hms(rec_date))
ccrb_comp_cleanv3 <- ccrb_comp_cleanv2 %>%
filter(rec_dt > as.Date('2017-01-01'),
!is.na(precinct),
precinct != "",
precinct != "Precinct 0",
precinct != "483",
!is.na(boro),
boro != "",
boro != "Outside NYC")
#binary-ifying dispositions of interest so I can analyze them numerically
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation" |
disp == "Victim Unidentified" |
disp == "Officer(s) Unidentified" |
disp == "Alleged Victim Unavailable" |
disp == "Alleged Victim Uncooperative" |
disp == "Witness Unavailable" |
disp == "Witness Uncooperative", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)"|
disp == "Substantiated (Charges)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0) #Year helpful, but covers multiple administrations "adams" can isolate that effect
) %>%
filter(rec_yr < 2024) #removing 2024 to prevent partial year from skewing
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
#compute per-capita complaints
ccrb_comps_pc <- ccrb_pct_join %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
#un/regrouping the stats to do a citywide regression
citywide_stat1 <- ccrb_comps %>%
group_by(rec_yr, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
citywide_stat2 <- citywide_stat1 %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000)
write.csv(citywide_stat2, "citywide_stats.csv")
#cleaning allegation data
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>% #CCRB allegation data
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp) %>%
filter(comp_id >= 201700000)
write.csv(alleg_raw, "alleg_raw.csv")
#Too many disposition categories to reasonably plot - let's consolidate
alleg_prep <- alleg_raw %>%
mutate(disp_cat = case_match(
ccrb_disp,
c("Complainant Uncooperative",
"Complainant Unavailable",
"Complaint Withdrawn",
"Closed - Pending Litigation",
"Victim Unidentified",
"Officer(s) Unidentified",
"Alleged Victim Unavailable",
"Alleged Victim Uncooperative",
"Witness Unavailable",
"Witness Uncooperative",
"OMB PEG Directive Closure") ~ "truncated",
c("Substantiated (Command Discipline A)",
"Substantiated (Command Discipline B)",
"Substantiated (Command Lvl Instructions)",
"Substantiated (Formalized Training)",
"Substantiated (Charges)") ~ "substantiated",
c("Miscellaneous",
"Miscellaneous - Subject Resigned",
"Miscellaneous - Subject Retired",
"Miscellaneous - Subject Terminated") ~ "moot",
c("Exonerated",
"Unfounded",
"Within NYPD Guidelines") ~ "cleared",
c("Unable to Determine",
"Unsubstantiated") ~ "uncertain"
))
#prepping for the join
comp_alleg_prep <- ccrb_comps %>%
select(comp_id, precinct, boro, rec_yr, subst, truncated)
comp_alleg_join <- left_join(alleg_prep, comp_alleg_prep, by = "comp_id") %>%
filter(!is.na(rec_yr), rec_yr != 2024)
#dropping 2024 since as a partial year it skewed the data pretty badly
#prep for combined graph + shares
c_a_wrap2 <- comp_alleg_join %>%
group_by(rec_yr, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
#prep for faceted graph
c_a_wrap3 <- comp_alleg_join %>%
select(type != "Untruthful Statement")
View(comp_alleg_join)
c_a_wrap3 <- comp_alleg_join %>%
filter(type != "Untruthful Statement")
group_by(rec_yr, disp_cat, type) %>%
summarise(alleg_count = n())
View(comp_alleg_join)
c_a_wrap3 <- comp_alleg_join %>%
filter(type != "Untruthful Statement")
group_by(rec_yr, disp_cat, type) %>%
summarise(alleg_count = n())
c_a_wrap3 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr, disp_cat, type) %>%
summarise(alleg_count = n())
#prep for faceted share graph
c_a_wrap4 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr,  type, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
View(c_a_wrap4)
c_a_area_fac <- ggplot(c_a_wrap3) +
geom_area(aes(x = rec_yr, y = alleg_count, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-24",
x = "year",
y = "# of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal() +
facet_wrap(~type, ncol = 2)
c_a_area_fac
c_a_sharea <- ggplot(c_a_wrap2) +
geom_area(aes(x = rec_yr, y = cat_share, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-23",
x = "year",
y = "% of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal()
c_a_sharea
c_a_sharea_fac <- ggplot(c_a_wrap4) +
geom_area(aes(x = rec_yr, y = cat_share, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-23",
x = "year",
y = "% of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal() +
facet_wrap(~type, ncol = 2)
c_a_sharea_fac
good_pallette <- c("#0072B2", "#009E73", "#CC79A7", "#D55E00",  "#F0E442")
c_a_area <- ggplot(c_a_wrap2) +
geom_area(aes(x = rec_yr, y = alleg_count, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-23",
x = "year",
y = "# of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal()
c_a_area
ggsave("c_a_area.png")
c_a_area_fac <- ggplot(c_a_wrap3) +
geom_area(aes(x = rec_yr, y = alleg_count, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-24",
x = "year",
y = "# of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal() +
facet_wrap(~type, ncol = 2)
c_a_area_fac
ggsave("c_a_area_fac.png")
c_a_sharea <- ggplot(c_a_wrap2) +
geom_area(aes(x = rec_yr, y = cat_share, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-23",
x = "year",
y = "% of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal()
c_a_sharea
ggsave("c_a_sharea.png")
c_a_sharea_fac <- ggplot(c_a_wrap4) +
geom_area(aes(x = rec_yr, y = cat_share, fill = disp_cat))+
labs(
title = "Many Complaints Aren't Fully Investigated",
subtitle = "Broad dispositions over time, 2017-23",
x = "year",
y = "% of allegations",
fill = "Investigation Results",
caption = "source:
https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Allegations-Agains/6xgr-kwjq/about_data"
) +
scale_fill_manual(values = good_pallette)+
theme_minimal() +
facet_wrap(~type, ncol = 2)
c_a_sharea_fac
ggsave("c_a_sharea_fac.png")
pct_scatter_pop
pct_scatter1
subst_line
citywide_line2
citywide_area
citywide_area<- ggplot(citywide_stat2) +
geom_area(aes(x = rec_yr, y = comp_count, fill = comp_count)) +
labs(
title = "Complaints dropped until 2021, then rise",
subtitle = "citywide complaints 100k residents, 2017-2024ytd",
x = "year",
y = "complaints",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
theme_minimal()
citywide_area
citywide_scatter1
?tidy()
summary(bor_reg) #Looks like strong borough effects, but... (B(subst) = +0.015) (r2 =0.03)
summary(pctbor_reg) #...insignificant when precincts are factored in (B(subst) = 2.394), R2 = 0.3
summary(pct_reg2)
summary(pct_reg) #Adjusted R-squared = .2331 - much stronger, catching other effects too, like poverty, crime
summary(demo_reg) #Adjusted R-squared = .264 - B(subst) = +1.865
summary(both_reg)
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation" |
disp == "Victim Unidentified" |
disp == "Officer(s) Unidentified" |
disp == "Alleged Victim Unavailable" |
disp == "Alleged Victim Uncooperative" |
disp == "Witness Unavailable" |
disp == "Witness Uncooperative", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)"|
disp == "Substantiated (Charges)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0) #Year helpful, but covers multiple administrations "adams" can isolate that effect
) %>%
filter(rec_yr < 2024) #removing 2024 to prevent partial year from skewing
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
#compute per-capita complaints
ccrb_comps_pc <- ccrb_pct_join %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
#un/regrouping the stats to do a citywide regression
citywide_stat1 <- ccrb_comps %>%
group_by(rec_yr, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
citywide_stat2 <- citywide_stat1 %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000)
citywide_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg)
citywide_reg2 <- lm(log(comp_count) ~ lag(subst_count, 1) + lag(trunc_count, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg2)
both_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + precinct + rec_yr:precinct +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir,
data = ccrb_comps_pc)
summary(both_reg)
demo_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr +adams +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir,
data = ccrb_comps_pc)
summary(demo_reg)
pct_reg <- lm(log(comp_count) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + precinct + rec_yr +rec_yr:precinct + adams, data = ccrb_comps_pc)
summary(pct_reg)
pct_reg2 <- lm(log(comp_count) ~ lag(subst_count, 1) + lag(trunc_count, 1) + precinct + rec_yr +rec_yr:precinct + adams + pct_pop, data = ccrb_comps_pc)
summary(pct_reg2)
bor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + boro + boro:rec_yr
, data = ccrb_comps_pc)
summary(bor_reg)
pctbor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams
+ precinct + boro+ rec_yr:precinct + rec_yr:boro
, data = ccrb_comps_pc)
summary(pctbor_reg)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results <- table(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
?tidy()
pctbor_results <- summary(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
install.packages(broom)
instsall.packages("broom")
install.packages("broom")
library(tidyverse)
return(pctbor_results)
pctbor_results <- pctbor_reg %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
tidy(pctbor_reg)
pctbor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams
+ precinct + boro+ rec_yr:precinct + rec_yr:boro
, data = ccrb_comps_pc)
summary(pctbor_reg)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results <- tidy(pctbor_reg$coefficients) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results <- pctbor_reg$coefficients %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_reg$coefficients
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
library(broom)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
return(pctbor_results)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
summary(pctbor_results)
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
pctbor_results
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)")
pctbor_results
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results
city1_results <- tidy(citwyide_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
citywide_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg)
city1_results <- tidy(citwyide_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
citywide_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg)
city1_results <- tidy(citywide_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
city1_results
city1_coefs <- ggplot(city1_results) +
geom_bar(aes(x = reorder(term, testimate), y = estimate, fill = significance))
city1_coefs
city1_coefs <- ggplot(city1_results) +
geom_bar(aes(x = reorder(term, estimate), y = estimate, fill = significance))
city1_coefs
city1_coefs <- ggplot(city1_results) +
geom_bar(aes(x = term, y = estimate, fill = significance))
city1_coefs
city1_coefs <- ggplot(city1_results) +
geom_bar(aes(x = term, y = estimate, fill = significance)) +
labs(
title = "Citywide Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()
city1_coefs
city1_coefs <- ggplot(city1_results) +
geom_col(aes(x = term, y = estimate, fill = significance)) +
labs(
title = "Citywide Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()
city1_coefs
city1_coefs
city1_coefs <- ggplot(city1_results) +
geom_col(aes(x = term, y = estimate, fill = significance)) +
labs(
title = "Citywide Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
city1_coefs
