write.csv(ccrb_comps_pc, "ccrb_comps_pc.csv")
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
ccrb_comp_raw <- read.csv("Civilian_Complaint_Review_Board__Complaints_Against_Police_Officers_20240623.csv")
ccrb_comp_cleanv1 <- ccrb_comp_raw %>%
mutate(inc_date = Incident.Date,
rec_date = CCRB.Received.Date,
close_date = Close.Date,
boro = Borough.Of.Incident.Occurrence,
precinct = Precinct.Of.Incident.Occurrence,
disp = CCRB.Complaint.Disposition,
comp_id = Complaint.Id) %>%
select(comp_id, inc_date, rec_date, close_date, boro, precinct, disp)
#Mostly renamings here; keeping comp_id and precinct/boro identifiers so
#I can join them to other sets later
#date-timing the date complaints get received - incidents could be far in the past
#and investigations can sometimes take years so this is a good approximator
ccrb_comp_cleanv2 <- ccrb_comp_cleanv1 %>%
mutate(rec_dt = mdy_hms(rec_date))
ccrb_comp_cleanv3 <- ccrb_comp_cleanv2 %>%
filter(rec_dt > as.Date('2017-01-01'),
!is.na(precinct),
precinct != "",
precinct != "Precinct 0",
precinct != "483",
!is.na(boro),
boro != "",
boro != "Outside NYC")
#binary-ifying dispositions of interest so I can analyze them numerically
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0)
) #Year helpful, but covers multiple administrations "adams" can isolate that effect
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
source("pct_cleaning.R") #cleaning and prepping census data for precincts
source("ccrb_cleaning.R") #cleaning and prepping CCRB complaint data
#-----Regression specifications!--------------
citywide_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg)
citywide_reg2 <- lm(log(comp_count) ~ lag(subst_count, 1) + lag(trunc_count, 1) + rec_yr + adams, data = citywide_stat2)
summary(citywide_reg2)
#B(lag(subst_rate)) = 0.132 - 0.05 significant effect of prior year substantiations
#but assoc. with INCREASED complaint rate!
#possibly due to reporting effects?
#Adj R2 = 0.96
#both demographics and precincts
both_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + precinct + rec_yr:precinct +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir, data = ccrb_comps_pc)
summary(both_reg)
#can't reg demographics and precincts at the same time - too closely correlated!
#regression by demographic characteristics
demo_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr +adams +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir,
data = ccrb_comps_pc)
summary(demo_reg) #Adjusted R-squared = .264 - B(subst) = +1.865
#regression by precinct - certain ones stick out
pct_reg <- lm(log(comp_count) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + precinct + rec_yr +rec_yr:precinct + adams, data = ccrb_comps_pc)
summary(pct_reg) #Adjusted R-squared = .2331 - much stronger, catching other effects too, like poverty, crime
#B(subst) = +2.277
pct_reg2 <- lm(log(comp_count) ~ lag(subst_count, 1) + lag(trunc_count, 1) + precinct + rec_yr +rec_yr:precinct + adams + pct_pop, data = ccrb_comps_pc)
summary(pct_reg2)
#separating out borough effects
bor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + boro + boro:rec_yr
, data = ccrb_comps_pc)
summary(bor_reg) #Looks like strong borough effects, but... (B(subst) = +0.015) (r2 =0.03)
pctbor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams
+ precinct + boro+ rec_yr:precinct + rec_yr:boro
, data = ccrb_comps_pc)
summary(pctbor_reg) #...insignificant when precincts are factored in (B(subst) = 2.394), R2 = 0.3
#---------Some visualizations
citywide_scatter1 <- ggplot(citywide_stat2) +
geom_point(aes(x = rec_yr, y = comp_rate_p100k)) +
labs(
title = "Complaint Rates dropped until 2021, then rise",
subtitle = "citywide complaints 100k residents, 2017-2024ytd",
x = "log of substantiation rate",
y = "complaints per 100k",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
theme_minimal()
citywide_scatter1
citywide_line<- ggplot(citywide_stat2) +
geom_line(aes(x = rec_yr, y = comp_count)) +
labs(
title = "Complaints dropped until 2021, then rise",
subtitle = "citywide complaints 100k residents, 2017-2024ytd",
x = "year",
y = "complaints",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
theme_minimal()
citywide_line
citywide_line2<- ggplot(citywide_stat2) +
geom_line(aes(x = rec_yr, y = comp_rate_p100k)) +
labs(
title = "Complaints dropped until 2021, then rise",
subtitle = "citywide complaints per 100k residents, 2017-2024ytd",
x = "year",
y = "complaints per 100k",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
theme_minimal()
citywide_line2
subst_line <- ggplot(citywide_stat2) +
geom_line(aes(x = rec_yr, y = subst_count)) +
labs(
title = "Complaints dropped until 2021, then rise",
subtitle = "citywide substantiated complaints, 2017-2024ytd",
x = "year",
y = "substantiations",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
geom_line(aes(x = rec_yr, y = comp_count)) +
geom_line(aes(x = rec_yr, y = trunc_count)) +
theme_minimal()
subst_line
pct_scatter1 <- ggplot(ccrb_comps_pc) +
geom_jitter(aes(x = subst_rate, y = comp_rate_p100k)) +
labs(
title = "complaints vs substantiations by precinct",
subtitle = "citywide substantiated complaints, 2017-2024ytd",
x = "complaints per capita",
y = "substantiations",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
)
pct_scatter1
pct_scatter_pop <- ggplot(ccrb_comps_pc) +
geom_jitter(aes(x = lag(subst_rate, 1), y = comp_rate_p100k)) +
labs(
title = "truncations vs substantiations by precinct",
subtitle = "citywide substantiated complaints, 2017-2024ytd",
x = "substantiations",
y = "complaints per capita",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
)
pct_scatter_pop
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
ccrb_comp_raw <- read.csv("Civilian_Complaint_Review_Board__Complaints_Against_Police_Officers_20240623.csv")
ccrb_comp_cleanv1 <- ccrb_comp_raw %>%
mutate(inc_date = Incident.Date,
rec_date = CCRB.Received.Date,
close_date = Close.Date,
boro = Borough.Of.Incident.Occurrence,
precinct = Precinct.Of.Incident.Occurrence,
disp = CCRB.Complaint.Disposition,
comp_id = Complaint.Id) %>%
select(comp_id, inc_date, rec_date, close_date, boro, precinct, disp)
#Mostly renamings here; keeping comp_id and precinct/boro identifiers so
#I can join them to other sets later
#date-timing the date complaints get received - incidents could be far in the past
#and investigations can sometimes take years so this is a good approximator
ccrb_comp_cleanv2 <- ccrb_comp_cleanv1 %>%
mutate(rec_dt = mdy_hms(rec_date))
ccrb_comp_cleanv3 <- ccrb_comp_cleanv2 %>%
filter(rec_dt > as.Date('2017-01-01'),
!is.na(precinct),
precinct != "",
precinct != "Precinct 0",
precinct != "483",
!is.na(boro),
boro != "",
boro != "Outside NYC")
#binary-ifying dispositions of interest so I can analyze them numerically
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0)
) #Year helpful, but covers multiple administrations "adams" can isolate that effect
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
#compute per-capita complaints
ccrb_comps_pc <- ccrb_pct_join %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
write.csv(ccrb_comps_pc, "ccrb_comps_pc.csv")
#un/regrouping the stats to do a citywide regression
citywide_stat1 <- ccrb_comps %>%
group_by(rec_yr, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
citywide_stat2 <- citywide_stat1 %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000)
write.csv(citywide_stat2, "citywide_stats.csv")
precinct_plot_data <- ccrb_comps %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n(),
comp_rate_p100k = comp_count/pct_pop * 100000
)
View(precinct_plot_data)
precinct_plot_datav1 <- ccrb_comps %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n(),
)
View(precinct_plot_datav1)
precinct_plot_datav1 <- ccrb_comps %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n(),
)
pct_plot_v2 <- precinct_plot_datav1 %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
View(ccrb_pct_join)
pct_plot_v2 <- precinct_plot_datav1 %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000) %>%
left_join(pct_plot_v2, pct_stats_v2, by = "precinct")
pct_plot_v2 <- precinct_plot_datav1 %>%
left_join(pct_plot_v2, pct_stats_v2, by = "precinct")
pct_plot_v2 <- precinct_plot_datav1 %>%
left_join(precinct_plot_datav1, pct_stats_v2, by = "precinct")
pct_plot_v2 <- precinct_plot_datav1 %>%
left_join(precinct_plot_datav1, pct_stats_v2, by = "precinct") %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
View(pct_plot_v2)
View(precinct_plot_datav1)
View(pct_stats_v2)
View(pct_plot_v2)
pct_plot_v2 <- precinct_plot_datav1 %>%
left_join(precinct_plot_datav1, pct_stats_v2, by = "precinct")
View(pct_plot_v2)
precinct_plot_datav1 <- ccrb_comps %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n(),
)
View(precinct_plot_datav1)
pct_plot_join <- precinct_plot_datav1 %>%
left_join(precinct_plot_datav1, pct_stats_v2, by = "precinct")
View(pct_plot_join)
pct_plot_pc <- precinct_plot_datav1 %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
View(ccrb_comps)
View(citywide_stat2)
pct_plot_v3 <- ccrb_comps_dum %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n())
View(pct_plot_v3)
pct_stats_v3 <- pct_stats_v2 %>%
select(precinct != "121")
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
pct_pop <- read.csv("nyc_precinct_2020pop.csv") #credit to John Keefe; data and data dictionaries found here: https://github.com/jkeefe/census-by-precincts/blob/master/data/nyc/nyc_precinct_2020pop.csv
#selecting only relevant demographic features; many are too granular to matter
pct_pop_slim <- pct_pop %>%
select(precinct, P1_001N, P1_003N, P1_004N, P1_005N, P1_006N, P1_007N, P1_008N, P1_009N, P1_010N, P2_001N, P2_002N, P2_003N, P2_004N, P2_005N, P2_006N, P2_007N, P2_008N, P2_009N, P2_010N, P2_011N)
#cleaning up the names so I can use them without referencing the documentation
pct_pop_clean <- pct_pop_slim %>%
mutate(pct_pop = P1_001N, pop_white = P1_003N, pop_black = P1_004N, pop_nat = P1_005N, pop_asian = P1_006N, pop_oth = P1_008N, pop_birac = P1_009N, pop_hisp = P2_002N, pop_nonhisp = P2_003N, pop_nhwhite = P2_005N, pop_nhblack = P2_006N, pop_nhnat = P2_007N, pop_nhasian = P2_008N) %>%
select(precinct, pct_pop, pop_white, pop_nhwhite, pop_black, pop_nhblack, pop_hisp, pop_nonhisp, pop_asian, pop_nhasian, pop_nat, pop_nhnat, pop_birac)
#calculating group shares
pct_pop_shares <- pct_pop_clean %>%
mutate(pct = precinct, share_wh = pop_white/pct_pop, share_nhwh = pop_nhwhite/pct_pop, share_bl = pop_black/pct_pop, share_nhbl = pop_nhblack/pct_pop, share_hisp = pop_hisp/pct_pop, share_nonhisp = pop_nonhisp/pct_pop, share_asian = pop_asian/pct_pop, share_nat = pop_nat/pct_pop, share_bir = pop_birac/pct_pop)
#Convert precinct to character, select it, then rename for join
pct_stats <- pct_pop_shares %>%
mutate(pct = as.character(precinct)) %>%
select(pct, pct_pop, pop_white, pop_nhwhite,
pop_black, pop_nhblack, pop_hisp, pop_nonhisp,
pop_asian, pop_nhasian, pop_nat, pop_birac,
share_wh, share_nhwh, share_bl, share_nhbl,
share_hisp, share_nonhisp, share_asian, share_nat, share_bir) %>%
rename(precinct = pct)
write_csv(pct_stats, "pct_stats_v1.csv") #pull out to manually add leading zeros for Precincts under 10 in excel
pct_stats_v2 <- read_csv("pct_stats_v2.csv") #bringing back in with zeros for join to ccrb data
pct_stats_v3 <- pct_stats_v2 %>%
select(precinct != "121")
pct_stats_v3 <- pct_stats_v2 %>%
select(precinct != "121")
pct_stats_v3 <- pct_stats_v2 %>%
filter(precinct != "121")
pct_plot_v3 <- ccrb_comps %>%
select()
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n())
View(pct_plot_v3)
pct_plot_v3 <- ccrb_comps_dum %>%
select()
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n())
pct_plot_v3 <- ccrb_comps_dum %>%
group_by(precinct) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
comp_count = n())
View(pct_plot_v3)
pct_plot_v4 <- left_join(pct_plot_v3, pct_stats_v3, by = "precinct")
pct_plot_v4 <- left_join(pct_plot_v3, pct_stats_v3, by = "precinct") %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000)
View(pct_plot_v4)
pct_plot_v4 <- left_join(pct_plot_v3, pct_stats_v3, by = "precinct") %>%
mutate(comp_rate_p10k = comp_count/8800000 * 10000)
View(pct_plot_v4)
pct_plot_v4 <- left_join(pct_plot_v3, pct_stats_v3, by = "precinct") %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000)
View(pct_plot_v4)
write.csv(pct_plot_v4, "pct_plot_v4.csv")
pct_plot_v4 <- left_join(pct_plot_v3, pct_stats_v3, by = "precinct") %>%
mutate(comp_rate_p100k = comp_count/8800000 * 100000) %>%
select(precinct, trunc_rate, subst_rate, comp_rate_p100k, share_bl)
View(pct_plot_v4)
write.csv(pct_plot_v4, "pct_plot_v4.csv")
#cleaning allegation data
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv")
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>%
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp, nypd_disp) %>%
filter(comp_id >= 201700000)
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>% #CCRB allegation data
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp, nypd_disp) %>%
filter(comp_id >= 201700000)
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>% #CCRB allegation data
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp, nypd_disp) %>%
filter(comp_id >= 201700000)
comp_alleg_prep <- ccrb_comps %>%
select(comp_id, precinct, boro, rec_yr)
comp_alleg_join <- left_join(alleg_raw, comp_alleg_prep, by = "comp_id")
View(comp_alleg_join)
View(comp_alleg_join)
View(comp_alleg_join)
count(comp_alleg_join$type)
table(comp_alleg_join$type)
