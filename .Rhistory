) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
both_coefs
ggsave("both_coefs.png")
pct_coefs <- ggplot(pctreg_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Precinct Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
pct_coefs
ggsave("pct_coefs.png")
pctbor_coefs <- ggplot(pctbor_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Citywide Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
pctbor_coefs
ggsave("pctbor_coefs.png")
pct_coefs <- ggplot(pctreg_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Precinct Regression Results",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
pct_coefs
pct_coefs <- ggplot(pctreg_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Precinct Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
pct_coefs
pctbor_coefs <- ggplot(pctbor_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Precinct and Borough Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
pctbor_coefs
ggsave("pctbor_coefs.png")
pctbor_results
summary(pctbor_reg) #...insignificant when precincts are factored in (B(subst) = 2.394), R2 = 0.3
summary(bor_reg) #Looks like strong borough effects, but... (B(subst) = +0.015) (r2 =0.03)
bor_coefs<- ggplot(bor_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Borough Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
bor_coefs
ggsave("bor_coefs.png")
bor_results
summary(pctbor_reg) #...insignificant when precincts are factored in (B(subst) = 2.394), R2 = 0.3
bor_coefs<- ggplot(bor_results) +
geom_col(aes(x = reorder(term, estimate), y = estimate, fill = significance)) +
labs(
title = "Borough Regression Results",
x = "term",
y = "coefficient",
) +
theme_minimal()+
scale_fill_manual(
values = c("Signficant" = "#0072B2", "Not Significant" =  "#CC79A7"))
bor_coefs
ggsave("bor_coefs.png")
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
library(broom)
source("pct_cleaning.R") #cleaning and prepping census data for precincts
source("ccrb_cleaning.R") #cleaning and prepping CCRB complaint data
#-----Regression specifications & Coefficient Extraction--------------
#make sure to run regression and coefficient extraction together
#so the coefficient will extract from the most recent version
#1. Citywide, Complaints per capita
citywide_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams,
data = citywide_stat2)
summary(citywide_reg)
city1_results <- tidy(citywide_reg) %>% #coefficient extraction for charts
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
city1_results
#no significant coefficients, and R2 of 0.643
#3. both demographics and precincts
both_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + precinct + rec_yr:precinct +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir,
data = ccrb_comps_pc)
summary(both_reg)
both_results <- tidy(both_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
both_results
#can't reg demographics and precincts at the same time - too closely correlated!
#4. regression by demographic characteristics
demo_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr +adams +
share_nhwh + share_nhbl + share_hisp + share_asian + share_bir,
data = ccrb_comps_pc)
summary(demo_reg) #Adjusted R-squared = .264 - B(subst) = +1.865
demo_results <- tidy(demo_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
demo_results
#5. regression by precinct - certain ones stick out
pct_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + precinct + rec_yr +rec_yr:precinct + adams,
data = ccrb_comps_pc)
summary(pct_reg)
pctreg_results <- tidy(pct_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctreg_results
#6. separating out borough effects
bor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams + boro + boro:rec_yr
, data = ccrb_comps_pc)
summary(bor_reg) #Looks like strong borough effects, but... (B(subst) = +0.015) (r2 =0.03)
bor_results <- tidy(bor_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
bor_results
#7. Precinct and Borough
pctbor_reg <- lm(log(comp_rate_p100k) ~ lag(subst_rate, 1) + lag(trunc_rate, 1) + rec_yr + adams
+ precinct + boro+ rec_yr:precinct + rec_yr:boro
, data = ccrb_comps_pc)
summary(pctbor_reg) #...insignificant when precincts are factored in (B(subst) = 2.394), R2 = 0.3
pctbor_results <- tidy(pctbor_reg) %>%
filter(term != "(Intercept)") %>%
mutate(significance = ifelse(p.value < 0.05, "Significant", "Not Significant"))
pctbor_results
#---------Plots!---------
citywide_totals<- ggplot(overall_count) +
geom_area(aes(x = rec_yr, y = alleg_count), fill = "#D55E00") +
geom_area(aes(x = rec_yr, y = comp_count), fill = "#0072B2") +
labs(
title = "Complaints dropped until 2021, then rise",
subtitle = "Allegations are more volatile throughout",
x = "year",
y = "complaints",
caption = "source: https://data.cityofnewyork.us/Public-Safety/Civilian-Complaint-Review-Board-Complaints-Against/2mby-ccnw/about_data"
) +
theme_minimal()
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
ccrb_comp_raw <- read.csv("Civilian_Complaint_Review_Board__Complaints_Against_Police_Officers_20240623.csv")
ccrb_comp_cleanv1 <- ccrb_comp_raw %>%
mutate(inc_date = Incident.Date,
rec_date = CCRB.Received.Date,
close_date = Close.Date,
boro = Borough.Of.Incident.Occurrence,
precinct = Precinct.Of.Incident.Occurrence,
disp = CCRB.Complaint.Disposition,
comp_id = Complaint.Id) %>%
select(comp_id, inc_date, rec_date, close_date, boro, precinct, disp)
#Mostly renamings here; keeping comp_id and precinct/boro identifiers so
#I can join them to other sets later
#date-timing the date complaints get received - incidents could be far in the past
#and investigations can sometimes take years so this is a good approximator
ccrb_comp_cleanv2 <- ccrb_comp_cleanv1 %>%
mutate(rec_dt = mdy_hms(rec_date))
ccrb_comp_cleanv3 <- ccrb_comp_cleanv2 %>%
filter(rec_dt > as.Date('2017-01-01'),
!is.na(precinct),
precinct != "",
precinct != "Precinct 0",
precinct != "483",
!is.na(boro),
boro != "",
boro != "Outside NYC")
#Categorizing dispositions of interest so I can analyze them numerically
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation" |
disp == "Victim Unidentified" |
disp == "Officer(s) Unidentified" |
disp == "Alleged Victim Unavailable" |
disp == "Alleged Victim Uncooperative" |
disp == "Witness Unavailable" |
disp == "Witness Uncooperative", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)"|
disp == "Substantiated (Charges)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0) #Year helpful, but covers multiple administrations "adams" can isolate that effect
) %>%
filter(rec_yr < 2024) %>% #removing 2024 to prevent partial year from skewing
mutate(citypop = if_else(
rec_yr > 2020, 8300000, 8800000))
#2020 Census data (aggregated from precincts) for <= 2020, average years after to ~8.3m accounting for likely population decline
#source:https://www.nyc.gov/assets/planning/download/pdf/planning-level/nyc-population/population-estimates/current-population-estimates-2023-June2024-release.pdf?r=1
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
#compute per-capita complaints
ccrb_comps_pc <- ccrb_pct_join %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
#un/regrouping the stats to do a citywide regression
citywide_stat1 <- ccrb_comps %>%
group_by(rec_yr, adams, citypop) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
citywide_stat2 <- citywide_stat1 %>%
mutate(comp_rate_p100k = comp_count/citypop * 100000)
write.csv(citywide_stat2, "citywide_stats.csv")
#cleaning allegation data
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>% #CCRB allegation data
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp) %>%
filter(comp_id >= 201700000)
write.csv(alleg_raw, "alleg_raw.csv")
#Too many disposition categories to reasonably plot - let's consolidate
alleg_prep <- alleg_raw %>%
mutate(disp_cat = case_match(
ccrb_disp,
c("Complainant Uncooperative",
"Complainant Unavailable",
"Complaint Withdrawn",
"Closed - Pending Litigation",
"Victim Unidentified",
"Officer(s) Unidentified",
"Alleged Victim Unavailable",
"Alleged Victim Uncooperative",
"Witness Unavailable",
"Witness Uncooperative",
"OMB PEG Directive Closure") ~ "truncated",
c("Substantiated (Command Discipline A)",
"Substantiated (Command Discipline B)",
"Substantiated (Command Lvl Instructions)",
"Substantiated (Formalized Training)",
"Substantiated (Charges)") ~ "substantiated",
c("Miscellaneous",
"Miscellaneous - Subject Resigned",
"Miscellaneous - Subject Retired",
"Miscellaneous - Subject Terminated") ~ "moot",
c("Exonerated",
"Unfounded",
"Within NYPD Guidelines") ~ "cleared",
c("Unable to Determine",
"Unsubstantiated") ~ "uncertain"
))
#prepping for the join
comp_alleg_prep <- ccrb_comps %>%
select(comp_id, precinct, boro, rec_yr, subst, truncated)
comp_alleg_join <- left_join(alleg_prep, comp_alleg_prep, by = "comp_id") %>%
filter(!is.na(rec_yr), rec_yr != 2024)
#dropping 2024 since as a partial year it skewed the data pretty badly
#prep for combined graph + shares
c_a_wrap2 <- comp_alleg_join %>%
group_by(rec_yr, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
#prep for faceted graph
c_a_wrap3 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr, disp_cat, type) %>%
summarise(alleg_count = n())
#prep for faceted share graph
c_a_wrap4 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr,  type, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
#for the overall graph
comp_alleg_graphprep1 <- comp_alleg_prep %>%
group_by(rec_yr) %>%
summarize(comp_count = n())
comp_alleg_graphprep2 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr) %>%
summarise(alleg_count = n())
overall_count <- left_join(comp_alleg_graphprep1, comp_alleg_graphprep2, by = "rec_yr")
write.csv(c_a_wrap, "c_a_wrap.csv")
library(tidyverse)
library(janitor)
library(lubridate)
library(stringr)
library(readr)
library(fastDummies)
ccrb_comp_raw <- read.csv("Civilian_Complaint_Review_Board__Complaints_Against_Police_Officers_20240623.csv")
ccrb_comp_cleanv1 <- ccrb_comp_raw %>%
mutate(inc_date = Incident.Date,
rec_date = CCRB.Received.Date,
close_date = Close.Date,
boro = Borough.Of.Incident.Occurrence,
precinct = Precinct.Of.Incident.Occurrence,
disp = CCRB.Complaint.Disposition,
comp_id = Complaint.Id) %>%
select(comp_id, inc_date, rec_date, close_date, boro, precinct, disp)
#Mostly renamings here; keeping comp_id and precinct/boro identifiers so
#I can join them to other sets later
#date-timing the date complaints get received - incidents could be far in the past
#and investigations can sometimes take years so this is a good approximator
ccrb_comp_cleanv2 <- ccrb_comp_cleanv1 %>%
mutate(rec_dt = mdy_hms(rec_date))
ccrb_comp_cleanv3 <- ccrb_comp_cleanv2 %>%
filter(rec_dt > as.Date('2017-01-01'),
!is.na(precinct),
precinct != "",
precinct != "Precinct 0",
precinct != "483",
!is.na(boro),
boro != "",
boro != "Outside NYC")
#Categorizing dispositions of interest so I can analyze them numerically
ccrb_comps <- ccrb_comp_cleanv3 %>%
select(comp_id, precinct, boro, disp, rec_dt) %>%
mutate(truncated = if_else(
disp == "Complainant Uncooperative" |
disp == "Complainant Unavailable" |
disp == "Complaint Withdrawn" |
disp == "Closed - Pending Litigation" |
disp == "Victim Unidentified" |
disp == "Officer(s) Unidentified" |
disp == "Alleged Victim Unavailable" |
disp == "Alleged Victim Uncooperative" |
disp == "Witness Unavailable" |
disp == "Witness Uncooperative", 1, 0),
subst = if_else(
disp == "Substantiated (Command Discipline A)" |
disp == "Substantiated (Command Discipline B)" |
disp == "Substantiated (Command Lvl Instructions)" |
disp == "Substantiated (Formalized Training)"|
disp == "Substantiated (Charges)", 1, 0),
rec_yr = year(rec_dt),
adams = if_else(rec_yr > 2021, 1, 0) #Year helpful, but covers multiple administrations "adams" can isolate that effect
) %>%
filter(rec_yr < 2024) %>% #removing 2024 to prevent partial year from skewing
mutate(citypop = if_else(
rec_yr > 2020, 8300000, 8800000))
#2020 Census data (aggregated from precincts) for <= 2020, average years after to ~8.3m accounting for likely population decline
#source:https://www.nyc.gov/assets/planning/download/pdf/planning-level/nyc-population/population-estimates/current-population-estimates-2023-June2024-release.pdf?r=1
ccrb_comps_dum <- ccrb_comps %>%
dummy_cols(select_columns = c("precinct", "rec_yr", "boro"))
ccrb_grouped <- ccrb_comps_dum %>%
group_by(precinct, rec_yr, boro, adams) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
#substantiation rate is *100 to make the regression more legible as a percent
#join the census data
ccrb_pct_join <- left_join(ccrb_grouped, pct_stats_v2, by = "precinct")
#compute per-capita complaints
ccrb_comps_pc <- ccrb_pct_join %>%
mutate(comp_rate_p100k = comp_count/pct_pop * 100000)
#un/regrouping the stats to do a citywide regression
citywide_stat1 <- ccrb_comps %>%
group_by(rec_yr, adams, citypop) %>%
summarize(trunc_rate = mean(truncated)*100,
subst_rate = mean(subst)*100,
subst_count = sum(subst),
trunc_count = sum(truncated),
ln_sr = log(subst_rate),
ln_tr = log(trunc_rate),
comp_count = n())
citywide_stat2 <- citywide_stat1 %>%
mutate(comp_rate_p100k = comp_count/citypop * 100000)
write.csv(citywide_stat2, "citywide_stats.csv")
#cleaning allegation data
alleg_raw <- read.csv("Civilian_Complaint_Review_Board__Allegations_Against_Police_Officers_20240719.csv") %>% #CCRB allegation data
rename(comp_id = Complaint.Id,
type = FADO.Type,
alleg = Allegation,
ccrb_disp = CCRB.Allegation.Disposition,
nypd_disp = NYPD.Allegation.Disposition) %>%
select(comp_id, type, alleg, ccrb_disp) %>%
filter(comp_id >= 201700000)
write.csv(alleg_raw, "alleg_raw.csv")
#Too many disposition categories to reasonably plot - let's consolidate
alleg_prep <- alleg_raw %>%
mutate(disp_cat = case_match(
ccrb_disp,
c("Complainant Uncooperative",
"Complainant Unavailable",
"Complaint Withdrawn",
"Closed - Pending Litigation",
"Victim Unidentified",
"Officer(s) Unidentified",
"Alleged Victim Unavailable",
"Alleged Victim Uncooperative",
"Witness Unavailable",
"Witness Uncooperative",
"OMB PEG Directive Closure") ~ "truncated",
c("Substantiated (Command Discipline A)",
"Substantiated (Command Discipline B)",
"Substantiated (Command Lvl Instructions)",
"Substantiated (Formalized Training)",
"Substantiated (Charges)") ~ "substantiated",
c("Miscellaneous",
"Miscellaneous - Subject Resigned",
"Miscellaneous - Subject Retired",
"Miscellaneous - Subject Terminated") ~ "moot",
c("Exonerated",
"Unfounded",
"Within NYPD Guidelines") ~ "cleared",
c("Unable to Determine",
"Unsubstantiated") ~ "uncertain"
))
#prepping for the join
comp_alleg_prep <- ccrb_comps %>%
select(comp_id, precinct, boro, rec_yr, subst, truncated)
comp_alleg_join <- left_join(alleg_prep, comp_alleg_prep, by = "comp_id") %>%
filter(!is.na(rec_yr), rec_yr != 2024)
#dropping 2024 since as a partial year it skewed the data pretty badly
#prep for combined graph + shares
c_a_wrap2 <- comp_alleg_join %>%
group_by(rec_yr, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
#prep for faceted graph
c_a_wrap3 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr, disp_cat, type) %>%
summarise(alleg_count = n())
#prep for faceted share graph
c_a_wrap4 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr,  type, disp_cat) %>%
summarise(alleg_count = n()) %>%
mutate(cat_share = alleg_count/sum(alleg_count) * 100)
#for the overall graph
comp_alleg_graphprep1 <- comp_alleg_prep %>%
group_by(rec_yr) %>%
summarize(comp_count = n())
comp_alleg_graphprep2 <- comp_alleg_join %>%
filter(type != "Untruthful Statement") %>%
group_by(rec_yr) %>%
summarise(alleg_count = n())
overall_count <- left_join(comp_alleg_graphprep1, comp_alleg_graphprep2, by = "rec_yr")
write.csv(c_a_wrap2, "c_a_wrap2.csv")
write.csv(c_a_wrap3, "c_a_wrap3.csv")
#Quick Penalty Match Check -
#making sure ACLU trend here (https://www.nyclu.org/uploads/2021/12/nyclu-2021-ccrbdata-report.pdf)
#not overwhelmingly driven by years prior to my analysis
penalties <- read.csv("Civilian_Complaint_Review_Board__Penalties_20240727.csv") %>%
rename(comp_id = Complaint.Id,
ccrb_disp = CCRB.Substantiated.Officer.Disposition,
nypd_disp = NYPD.Officer.Penalty) %>%
select(comp_id, ccrb_disp, nypd_disp) %>%
filter(comp_id >= 201700000, nypd_disp != "") %>%
mutate(nopen = ifelse(nypd_disp == "No penalty", 1, 0)) %>%
group_by(ccrb_disp) %>%
summarise(pct_nopen = mean(nopen)*100) %>%
mutate(labels = case_when(
ccrb_disp == "Substantiated (Charges)" ~ "Charges",
ccrb_disp == "Substantiated (Command Discipline A)" ~ "Cmd Disc. A",
ccrb_disp == "Substantiated (Command Discipline B)" ~ "Cmd Disc. B",
ccrb_disp == "Substantiated (Command Lvl Instructions)" ~ "Cmd Lvl Instr.",
ccrb_disp == "Substantiated (Formalized Training)" ~ "Training"
))
#Not quite as bad as before, but still bad
